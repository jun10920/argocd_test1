# TODO
# Kaniko Ïù¥ÎØ∏ÏßÄ Ïô∏Î∂Ä/ÎÇ¥Î∂Ä Í≤ΩÎ°ú ÌôïÏù∏, limit Ï¶ùÍ∞Ä
# JCasC Í∞í ÌòÑÌñâÌôî
# ECR image ÌôïÏù∏
# Okta Ïó∞Îèô
# Global Env ÌôòÍ≤Ω Î≥ÄÏàò ÏÑ§Ï†ï
# Credential ÏÑ§Ï†ï
# jenkinsUrl ÌôïÏù∏


jenkins:
  namespaceOverride: jenkins
  fullnameOverride: jenkins
  controller:
    admin:
      username: "devops-admin"
    image: 971422699372.dkr.ecr.ap-northeast-2.amazonaws.com/jenkins/com-all-ecr-jenkins-main
    tag: latest
    pullPolicy: "Always"
    #2025.08.29 PDB ÏòµÏÖò Ï∂îÍ∞Ä
    podDisruptionBudget:
      enabled: true
      maxUnavailable: 1
    release: 1
    runAsUser: 0
    jenkinsUrl: https://pjh.kalccoe.com/jenkins
    jenkinsUriPrefix: "/jenkins"
    jenkinsOpts: "--requestHeaderSize=258140"
    javaOpts: >
      -Dorg.apache.commons.jelly.tags.fmt.timeZone=Asia/Seoul
      -Duser.timezone=Asia/Seoul
    installPlugins: false
    markupFormatter: rawHtml
    probes:
      startupProbe:
        periodSeconds: 30
    overrideArgs:
      - --httpPort=7080
    servicePort: 7080
    targetPort: 7080
    resources:
      requests:
        cpu: "4"
        memory: "7000Mi"
      limits:
        cpu: "4"
        memory: "7000Mi"
    JCasC:
      securityRealm: |-
        local:
          allowsSignup: false
          enableCaptcha: false
          users:
          - id: "admin"
            name: "Jenkins Admin"
            password: "koreanair1!"
      #   oic:
      #     clientId: "${json:oicClientId:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
      #     clientSecret: "${json:oicClientSecret:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
      #     emailFieldName: "email"
      #     groupsFieldName: "groups"
      #     userNameField: "name"
      #     serverConfiguration:
      #       wellKnown:
      #         wellKnownOpenIDConfigurationUrl: "https://login.koreanair.com/.well-known/openid-configuration"
      #     escapeHatchEnabled: true
      #     escapeHatchUsername: "${json:username:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
      #     escapeHatchSecret: "${json:userpwd:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
      #     escapeHatchGroup: "BDP_Jenkins_Prd_Admin"
      #     logoutFromOpenidProvider: true
      # authorizationStrategy: |-
      #   roleBased:
      #     roles:
      #       global:
      #         - name: "admin"
      #           description: "BDP Jenkins Í¥ÄÎ¶¨Ïûê"
      #           permissions:
      #             - "Overall/Administer"
      #           entries:
      #             - group: "BDP_Jenkins_Prd_Admin"

      #         - name: "user"
      #           description: "BDP Jenkins ÏÇ¨Ïö©Ïûê"
      #           permissions:
      #             - "Overall/Read"
      #           entries:
      #             - group: "BDP_Jenkins_Prd_User"
      #             - group: "BDP_Jenkins_Prd_Wing"

      #       items:
      #         - name: "wing-user"
      #           pattern: "^WING(?:/WING.*)?"
      #           permissions:
      #             - "Job/Read"
      #           entries:
      #             - group: "BDP_Jenkins_Prd_Wing"
      
      configScripts:
        general-settings: |
          jenkins:
            systemMessage: |
              <p style="color: #008080;">
                üéâ <b>ÌôòÏòÅÌï©ÎãàÎã§! Welcome to SANDBOX CI/CD worklfow.</b>
              </p>
            globalNodeProperties:
            - envVars:
                env:
                - key: "JENKINSWORKER_NODE_WING"
                  value: "wing_jenkins_worker"
                - key: "ARGO_GIT_URL"
                  value: "https://itro.koreanair.com/git/scm/awsbdpcicd/argo-template.git"
                - key: "ARGO_URL"
                  value: "pjh.kalccoe.com/argocd"
                - key: "ARGO_WORKSPACE"
                  value: "/data/jenkins_worker/workspace/CONFIG/ARGO-TEMPLATE"
                - key: "ACCOUNT_COMWingDEV"
                  value: "149536472699"
                - key: "ACCOUNT_COMWingSTG"
                  value: "345594606519"
                - key: "ACCOUNT_COMWingPRD"
                  value: "481665101185"
                - key: "ACCOUNT_COMBDPSHR"
                  value: "593793028939"
                - key: "ACCOUNT_DCOSEC"
                  value: "993398491107"
                - key: "BITBUCKET_URL"
                  value: "https://itro.koreanair.com/git"
                - key: "G_SONAR_RUN"
                  value: "true"
                - key: "JIRA_REST_SET_DEPLOY_RESULT"
                  value: "setDeployResultByJenkins"
                - key: "JIRA_REST_SET_DEPLOY_STATUS"
                  value: "setDeployStatusByJenkins"
                - key: "JIRA_URL"
                  value: "https://itro.koreanair.com/alm"
                - key: "REGION"
                  value: "ap-northeast-2"
                - key: "ROLE_JENKINS_WORKER"
                  value: "com-shr-role-eks-jenkins-worker"
                - key: "ROLE_APP_DEV_JENKINS_WORKER"
                  value: "arn:aws:iam::149536472699:role/jenkinswing-worker"
                - key: "ROLE_APP_STG_JENKINS_WORKER"
                  value: "arn:aws:iam::345594606519:role/jenkinswing-worker"
                - key: "ROLE_APP_PRD_JENKINS_WORKER"
                  value: "arn:aws:iam::481665101185:role/jenkinswing-worker"
                - key: "ROLE_APP_SHR_JENKINS_WORKER"
                  value: "arn:aws:iam::593793028939:role/com-shr-role-eks-jenkins-worker"

        crendentials-config: |
          credentials:
            system:
              domainCredentials:
              - credentials:
                # - usernamePassword:
                #     id: "ifuser-bitbucket"
                #     password: "${json:userpwd:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     username: "${json:username:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     scope: GLOBAL
                #     usernameSecret: true
                #     description: "Bitbucket Ïù∏Ï¶ù name password"
                # - usernamePassword:
                #     id: "ifuser-alm"
                #     password: "${json:userpwd:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     username: "${json:username:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     scope: GLOBAL
                #     usernameSecret: true
                #     description: "ALMÌï®Ïàò ÏÇ¨Ïö©ÏùÑ ÏúÑÌïú credential-id ÏÉùÏÑ±"
                # - string:
                #     id: "ifuser-argocd"
                #     secret: "${json:argocdToken:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     scope: GLOBAL
                #     description: "argocd ÌÜ†ÌÅ∞"
                # - string:
                #     id: "ifuser-jira"
                #     secret: "${json:jiraToken:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     scope: GLOBAL
                #     description: "jira ÌÜ†ÌÅ∞"
                # - usernamePassword:
                #     id: "ifuser-sonarqube-id"
                #     password: "${json:userpwd:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     username: "${json:username:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     scope: GLOBAL
                #     usernameSecret: true
                #     description: "ifuser SonarQube Ïù∏Ï¶ù name password"
                # - string:
                #     id: "ifuser-sonarqube"
                #     secret: "${json:sonarqubeToken:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     scope: GLOBAL
                #     description: "sonarqube ÌÜ†ÌÅ∞"
                # - string:
                #     id: "nexus-token"
                #     secret: "${json:nexusToken:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     scope: GLOBAL
                #     description: "nexus ÌÜ†ÌÅ∞"
                # - string:
                #     id: "jcasc-token"
                #     secret: "${json:JcascTest:${arn:aws:secretsmanager:ap-northeast-2:593793028939:secret:bdp/shr/eks/jenkins/passwords-0WgrL6}}"
                #     scope: GLOBAL
                #     description: "JcascConfigReload ÌÖåÏä§Ìä∏Ïö© ÌÜ†ÌÅ∞"
        plugin-settings: |
          unclassified:
            sonarGlobalConfiguration:
              buildWrapperEnabled: false
              installations:
              - credentialsId: "ifuser-sonarqube"
                name: "ALM SonarQube"
                serverUrl: "https://itro.koreanair.com/codeqa"
                triggers:
                  skipScmCause: false
                  skipUpstreamCause: false
            email-ext:
              adminRequiredForTemplateTesting: false
              allowUnregisteredEnabled: false
              charset: "UTF-8"
              debugMode: false
              defaultBody: |-
                $PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS:
                Check console output at $BUILD_URL to view the results.
              defaultContentType: "text/html"
              defaultSubject: "$PROJECT_NAME - Build # $BUILD_NUMBER - $BUILD_STATUS!"
              defaultTriggerIds:
              - "hudson.plugins.emailext.plugins.trigger.FailureTrigger"
              mailAccount:
                credentialsId: "ifuser-smtp"
                smtpHost: "email-smtp.ap-northeast-2.amazonaws.com"
              maxAttachmentSize: -1
              maxAttachmentSizeMb: -1
              precedenceBulk: false
              watchingEnabled: false
            timestamper:
              allPipelines: true
              elapsedTimeFormat: "'<b>'HH:mm:ss.S'</b> '"
              systemTimeFormat: "'<b>'HH:mm:ss'</b> '"
            globalLibraries:
              libraries:
              - defaultVersion: "master"
                name: "share-library"
                retriever:
                  modernSCM:
                    scm:
                      git:
                        credentialsId: "ifuser-bitbucket"
                        remote: "https://itro.koreanair.com/git/scm/prjalm/kal.jenkins.slo.git"
                        traits:
                        - "gitBranchDiscovery"
              - defaultVersion: "master"
                name: "share-library-aicc"
                retriever:
                  modernSCM:
                    scm:
                      git:
                        credentialsId: "ifuser-bitbucket"
                        remote: "https://itro.koreanair.com/git/scm/aiccjenkins/jenkinsaicc-shrlib.git"
                        traits:
                        - "gitBranchDiscovery"
        tool-settings: |
          tool:
            git:
              installations:
              - home: "git"
                name: "Default"
            sonarRunnerInstallation:
              installations:
              - home: "/data/jenkins_worker/build_tools/sonar-scanner/4.8.0.2856"
                name: "efs_sonar"
    #TODO
    jenkinsAdminEmail: itroadmin@koreanair.com
    ingress:
      enabled: true
      ingressClassName: nginx
      hostName: pjh.kalccoe.com
      paths:
        - path: /jenkins
          pathType: Prefix
          backend:
            service:
              name: jenkins
              port:
                number: 7080
      annotations:
        nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
        nginx.ingress.kubernetes.io/ssl-redirect: "false"
        # nginx.ingress.kubernetes.io/configuration-snippet: "rewrite ^(/jenkins)$ $1/ redirect;"

  rbac:
    create: true
  serviceAccount:
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::971422699372:role/com-all-role-eks-pjh-jenkins-main
 
  serviceAccountAgent:
    create: true
    name: jenkins-worker
    annotations:
      eks.amazonaws.com/role-arn: arn:aws:iam::971422699372:role/com-all-role-eks-pjh-jenkins-worker
      
  # awsSecurityGroupPolicies:
  #   enabled: true
  #   policies:
  #     - name: "com-shr-jenkinsaicc"
  #       securityGroupIds:
  #         - sg-03c5928b3cfbdf788
  #       podSelector:
  #         matchExpressions:
  #           - key: app.kubernetes.io/component
  #             operator: In
  #             values:
  #               - jenkins-controller

  agent:
    websocket: true
    namespace: jenkins
    podName: jenkins_worker
    customJenkinsLabels: jenkins_worker
    image: 971422699372.dkr.ecr.ap-northeast-2.amazonaws.com/jenkins/com-all-ecr-jenkins-worker
    tag: latest

    # timeoutÏÑ§Ï†ïÏùÑ 2Î∞∞Î°ú ÏÑ§Ï†ï
    kubernetesConnectTimeout: 10
    kubernetesReadTimeout: 30
    containerCap: ""
    connectTimeout: 300
    jenkinsUrl: https://pjh.kalccoe.com/jenkins
    command:
    resources:
      requests:
        cpu: 2
        memory: 3840Mi
      limits:
        cpu: 2
        memory: 4096Mi
    workingDir: /data/jenkins_worker
    args: ""
    volumes:
      - type: PVC
        claimName: jenkins-worker
        mountPath: /data/jenkins_worker
        readOnly: false

    additionalContainers:
      - sideContainerName: kaniko
        image: gcr.io/kaniko-project/executor
        tag: v1.23.2-debug
        command: "/busybox/cat"
        args: ""
        workingDir: "/data/jenkins_worker"
        alwaysPullImage: true
        TTYEnabled: true
        resources:
          requests:
            cpu: 1
            memory: 256Mi
          limits:
            cpu: 4
            memory: 20000Mi
    podTemplates:
      com-shr-jenkins-agent: |
        - name: wing_jenkins_worker
          label: wing_jenkins_worker
          namespace: jenkins
          serviceAccount: jenkins-worker
          containers:
            - envVars:
              - envVar:
                  key: "JENKINS_URL"
                  value: "https://pjh.kalccoe.com/jenkins"
              name: jnlp
              image: 971422699372.dkr.ecr.ap-northeast-2.amazonaws.com/jenkins/com-all-ecr-jenkins-worker:latest
              resourceRequestCpu: "2"
              resourceRequestMemory: "3840Mi"
              resourceLimitCpu: "2"
              resourceLimitMemory: "4096Mi"
              workingDir: /data/jenkins_worker
              args: ""
            - envVars:
              - envVar:
                  key: "JENKINS_URL"
                  value: "http://jenkins.jenkins.svc.cluster.local:7080/jenkins"
              command: "/busybox/cat"
              name: kaniko
              image: gcr.io/kaniko-project/executor:v1.23.2-debug
              resourceRequestCpu: "1"
              resourceRequestMemory: "256Mi"
              resourceLimitCpu: "3"
              resourceLimitMemory: "15000Mi"
              workingDir: /data/jenkins_worker
              args: ""
              ttyEnabled: true
          volumes:
            - persistentVolumeClaim:
                claimName: jenkins-worker
                mountPath: /data/jenkins_worker
                readOnly: false

  persistence:
    enabled: true
    existingClaim: jenkins-main
    volumes:
      - name: jenkins-worker
        persistentVolumeClaim:
          claimName: jenkins-worker
    mounts:
      - mountPath: /data/jenkins_worker
        name: jenkins-worker
